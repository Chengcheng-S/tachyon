load("@bazel_tools//tools/build_defs/repo:http.bzl", "http_archive")

http_archive(
    name = "rules_python",
    sha256 = "84aec9e21cc56fbc7f1335035a71c850d1b9b5cc6ff497306f84cced9a769841",
    strip_prefix = "rules_python-0.23.1",
    urls = ["https://github.com/bazelbuild/rules_python/releases/download/0.23.1/rules_python-0.23.1.tar.gz"],
)

load("@rules_python//python:repositories.bzl", "py_repositories")

py_repositories()

load("@rules_python//python:pip.bzl", "pip_parse")

# Create a central repo that knows about the dependencies needed from
# requirements_lock.txt.
pip_parse(
    name = "pip_deps",
    requirements_lock = "//:requirements_lock.txt",
)

# Load the starlark macro, which will define your dependencies.
load("@pip_deps//:requirements.bzl", "install_deps")

# Call it to define repos for your requirements.
install_deps()

###########################################

local_repository(
    name = "kroma_network_tachyon",
    path = "../../../",
)

load("@kroma_network_tachyon//bazel:tachyon_deps.bzl", "tachyon_deps")

tachyon_deps()

load("@kroma_network_tachyon//bazel:pybind11_deps.bzl", "pybind11_deps")

pybind11_deps()

load("@kroma_network_tachyon//bazel:buildifier_deps.bzl", "buildifier_deps")

buildifier_deps()

# Start of rules_js
load("@kroma_network_tachyon//bazel:js_deps.bzl", "js_deps")

js_deps()

load("@aspect_rules_js//js:repositories.bzl", "rules_js_dependencies")

rules_js_dependencies()

load("@aspect_bazel_lib//lib:repositories.bzl", "aspect_bazel_lib_dependencies")

aspect_bazel_lib_dependencies()

# Fetch and register node, if you haven't already
load("@rules_nodejs//nodejs:repositories.bzl", "DEFAULT_NODE_VERSION", "nodejs_register_toolchains")

nodejs_register_toolchains(
    name = "nodejs",
    node_version = DEFAULT_NODE_VERSION,
)

load("@aspect_rules_js//npm:repositories.bzl", "npm_translate_lock")

npm_translate_lock(
    name = "npm",
    data = ["@iden3_ffiasm//:package.json"],
    npm_package_lock = "@iden3_ffiasm//:package-lock.json",
    pnpm_lock = "@iden3_ffiasm//:pnpm-lock.yaml",
    update_pnpm_lock = True,
    verify_node_modules_ignored = "@iden3_ffiasm//:.bazelignore",
)

load("@npm//:repositories.bzl", "npm_repositories")

npm_repositories()

# End of rules_js
