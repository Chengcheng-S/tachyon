load("//bazel:tachyon.bzl", "if_cc_shared_object")
load(
    "//bazel:tachyon_cc.bzl",
    "collect_hdrs",
    "tachyon_cc_library",
    "tachyon_cc_shared_library",
    "tachyon_cc_unittest",
)
load("//tachyon/build:version.bzl", "write_version_header")
load(
    ":version.bzl",
    "VERSION",
    "VERSION_MAJOR",
    "VERSION_MINOR",
    "VERSION_PATCH",
    "VERSION_PRERELEASE",
)

package(default_visibility = ["//visibility:public"])

write_version_header(
    name = "version_generated",
    lastchange = "//tachyon/build:lastchange",
    major = VERSION_MAJOR,
    minor = VERSION_MINOR,
    output = "version_generated.h",
    patch = VERSION_PATCH,
    prerelease = VERSION_PRERELEASE,
    project = "TACHYON_CC",
)

tachyon_cc_library(
    name = "export",
    hdrs = ["export.h"],
)

tachyon_cc_library(
    name = "version",
    srcs = ["version.cc"],
    hdrs = [
        "version.h",
        ":version_generated",
    ],
    deps = [":export"],
)

tachyon_cc_unittest(
    name = "cc_unittests",
    srcs = [
        "version_unittest.cc",
    ],
    deps = [
        ":version",
        "@com_google_absl//absl/strings",
    ],
)

tachyon_cc_shared_library(
    name = "tachyon",
    linkstatic = True,
    soversion = VERSION,
    tags = ["manual"],
    deps = if_cc_shared_object([
        "//tachyon/cc/math/elliptic_curves/bls12/bls12_381:g1",
        "//tachyon/cc/math/elliptic_curves/bn/bn254:g1",
    ]),
)

collect_hdrs(
    name = "tachyon_hdrs",
    hdrs = [
        "api.h",
        "export.h",
        "version.h",
        ":version_generated",
    ],
    deps = [
        "//tachyon/cc/math:math_hdrs",
    ],
)
