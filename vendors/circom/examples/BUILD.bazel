load("@kroma_network_rules_circom//:build_defs.bzl", "compile_circuit")
load("@kroma_network_tachyon//bazel:tachyon_cc.bzl", "tachyon_cc_binary")
load("//:build_defs.bzl", "witness_gen_library")

package(default_visibility = ["//visibility:public"])

exports_files(["multiplier_3.zkey"])

PRIME = "bn128"

compile_circuit(
    name = "compile_adder",
    main = "adder.circom",
    prime = PRIME,
    deps = [
        "@kroma_network_circomlib//circuits:binsum",
        "@kroma_network_circomlib//circuits:bitify",
    ],
)

witness_gen_library(
    name = "gen_witness_adder",
    gendep = ":compile_adder",
    prime = PRIME,
)

compile_circuit(
    name = "compile_multiplier_3",
    srcs = [
        "multiplier_2.circom",
        "multiplier_n.circom",
    ],
    main = "multiplier_3.circom",
    prime = PRIME,
)

witness_gen_library(
    name = "gen_witness_multiplier_3",
    gendep = ":compile_multiplier_3",
    prime = PRIME,
)

tachyon_cc_binary(
    name = "compute_witness_multiplier_3",
    srcs = ["compute_witness_multiplier_3.cc"],
    deps = [":gen_witness_multiplier_3"],
)
