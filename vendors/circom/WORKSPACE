workspace(name = "kroma_network_circom")

load("@bazel_tools//tools/build_defs/repo:http.bzl", "http_archive")

# Start of rules_rust
http_archive(
    name = "rules_rust",
    sha256 = "9d04e658878d23f4b00163a72da3db03ddb451273eb347df7d7c50838d698f49",
    urls = ["https://github.com/bazelbuild/rules_rust/releases/download/0.26.0/rules_rust-v0.26.0.tar.gz"],
)

load("@rules_rust//rust:repositories.bzl", "rules_rust_dependencies", "rust_register_toolchains")

rules_rust_dependencies()

# We need to change the default value of flag //tachyon/rs/base:rustc_version_ge_1.67.0
# if we change the default rustc version.
# See //tachyon/rs/base/BUILD.bazel.
rust_register_toolchains(
    edition = "2021",
    versions = [
        "1.66.1",
    ],
)

load("@rules_rust//crate_universe:repositories.bzl", "crate_universe_dependencies")

crate_universe_dependencies()

load("@rules_rust//crate_universe:defs.bzl", "crates_repository")

crates_repository(
    name = "crate_index",
    cargo_lockfile = "//:Cargo.lock",
    lockfile = "//:Cargo.Bazel.lock",
    manifests = ["//:Cargo.toml"],
)

load(
    "@crate_index//:defs.bzl",
    tachyon_crate_repositories = "crate_repositories",
)

tachyon_crate_repositories()
# End of rules_rust

local_repository(
    name = "kroma_network_tachyon",
    path = "../../",
)

load("@kroma_network_tachyon//bazel:tachyon_deps.bzl", "tachyon_deps")

tachyon_deps()

load("@kroma_network_tachyon//bazel:buildifier_deps.bzl", "buildifier_deps")

buildifier_deps()

# Start of rules_js
load("@kroma_network_tachyon//bazel:js_deps.bzl", "js_deps")

js_deps()

load("@aspect_rules_js//js:repositories.bzl", "rules_js_dependencies")

rules_js_dependencies()

load("@aspect_bazel_lib//lib:repositories.bzl", "aspect_bazel_lib_dependencies")

aspect_bazel_lib_dependencies()

# Fetch and register node, if you haven't already
load("@rules_nodejs//nodejs:repositories.bzl", "DEFAULT_NODE_VERSION", "nodejs_register_toolchains")

nodejs_register_toolchains(
    name = "nodejs",
    node_version = DEFAULT_NODE_VERSION,
)

load("@aspect_rules_js//npm:repositories.bzl", "npm_translate_lock")

npm_translate_lock(
    name = "npm",
    data = ["@iden3_ffiasm//:package.json"],
    npm_package_lock = "@iden3_ffiasm//:package-lock.json",
    pnpm_lock = "@iden3_ffiasm//:pnpm-lock.yaml",
    update_pnpm_lock = True,
    verify_node_modules_ignored = "@iden3_ffiasm//:.bazelignore",
)

load("@npm//:repositories.bzl", "npm_repositories")

npm_repositories()

# End of rules_js
